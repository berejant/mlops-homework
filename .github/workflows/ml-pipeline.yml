name: ML Model Training and Deployment

on:
  push:
    branches: [ main ]
    paths:
      - 'mlops-hw2-model-training-experiments/**'
      - 'mlops-hw3-model-inference/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'mlops-hw2-model-training-experiments/**'
      - 'mlops-hw3-model-inference/**'
  workflow_dispatch:  # Allow manual trigger

env:
  DOCKER_IMAGE: ghcr.io/${{ github.repository }}/yolo-model
  DOCKER_TAG: ${{ github.sha }}

jobs:
  train:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          cd mlops-hw2-model-training-experiments/yolo-cpu
          pip install -r requirements.txt
          
      - name: Debug wandb configuration
        env:
          WANDB_API_KEY: ${{ secrets.WANDB_API_KEY }}
        run: |
          cd mlops-hw2-model-training-experiments/yolo-cpu
          echo "Checking wandb configuration..."
          python -c "
          import wandb
          from dotenv import load_dotenv
          from train_yolo import load_config
          import os

          load_dotenv()
          config = load_config()
          print('Wandb configuration loaded:', config)

          try:
              wandb_api_key = os.getenv('WANDB_API_KEY')
              wandb.login(key=wandb_api_key)
              print("✅ Successfully logged in to W&B")
              
              # Вмикаємо логування W&B в налаштуваннях YOLO
              from ultralytics.utils import SETTINGS
              SETTINGS['wandb'] = True
              print("✅ W&B logging enabled in YOLO settings")
              
          except Exception as e:
              print(f"❌ Failed to setup W&B: {e}")
          "
          
      - name: Run model training
        env:
          WANDB_API_KEY: ${{ secrets.WANDB_API_KEY }}
        run: |
          cd mlops-hw2-model-training-experiments/yolo-cpu
          python train_yolo.py
          
      - name: Run tests
        run: |
          cd mlops-hw2-model-training-experiments/yolo-cpu
          if [ -d "tests" ]; then
            python -m pytest tests/
          else
            echo "No tests directory found, skipping tests"
          fi
          
      - name: Save model artifacts
        uses: actions/upload-artifact@v4
        with:
          name: trained-model
          path: mlops-hw2-model-training-experiments/yolo-cpu/setuniversity-mlops-s25/*/weights/*.pt
          if-no-files-found: error
          
  build-and-push:
    needs: train
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      
      - name: Download model artifacts
        uses: actions/download-artifact@v4
        with:
          name: trained-model
          path: mlops-hw3-model-inference/model
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./mlops-hw3-model-inference/FastAPI_Docker
          push: true
          tags: ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }},${{ env.DOCKER_IMAGE }}:latest 